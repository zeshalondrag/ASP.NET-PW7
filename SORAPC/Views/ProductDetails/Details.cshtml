@model SORAPC.Models.Product
@{
    ViewData["Title"] = "Купить " + Model.Names;
}

<style>
    h1 {
        font-size: 32px;
        color: #333333;
        margin-bottom: 20px;
    }

    .product-details-container {
        display: flex;
        gap: 20px;
        background-color: #fff;
        padding: 20px;
        border-radius: 16px;
        border: 1px solid #ddd;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        transition: background-color 0.3s ease;
    }

    .product-image {
        flex: 1;
        max-width: 300px;
    }

    .product-image img {
        width: 100%;
        border-radius: 8px;
    }

    .product-info {
        flex: 2;
        display: flex;
        flex-direction: column;
        gap: 15px;
    }

    .product-description {
        font-size: 20px;
        color: #555;
    }

    .product-rating {
        font-size: 20px;
        color: #ffc107;
    }

    .product-rating span {
        padding: 5px 10px;
        background-color: #f7f7f7;
        border-radius: 8px;
    }

    .product-price {
        display: flex;
        align-items: center;
        gap: 10px;
        font-size: 28px;
        color: #333;
    }

    .product-price span {
        padding: 5px 10px;
        background-color: #f7f7f7;
        border-radius: 8px;
        width: 315px;
        height: 60px;
    }

    .product-price p {
        margin: 0;
        font-weight: bold;
    }

    .product-price button {
        background-color: #007bff;
        color: #fff;
        border: none;
        padding: 10px 20px;
        border-radius: 12px;
        cursor: pointer;
        font-size: 28px;
    }

    .product-price button:hover {
        background-color: #0b6ad0;
    }

    .product-status {
        display: flex;
        gap: 10px;
        font-size: 16px;
        color: #555;
    }

    .product-status span {
        padding: 5px 10px;
        background-color: #f7f7f7;
        border-radius: 8px;
    }

    .reviews-container {
        display: flex;
        gap: 20px;
        margin-top: 20px;
    }

    .average-rating-card {
        flex: 1;
        background-color: #fff;
        padding: 20px;
        border-radius: 16px;
        border: 1px solid #ddd;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        transition: background-color 0.3s ease;
        width: 300px;
        height: 270px;
    }

    .reviews-section {
        flex: 2;
    }

    .add-review-button {
        margin-top: 20px;
        }

    .add-review-button button {
        background-color: #007bff;
        color: #fff;
        border: none;
        padding: 10px 20px;
        border-radius: 12px;
        cursor: pointer;
        font-size: 18px;
        width: 180px;
        height: 70px;
    }

    .add-review-button button:hover {
        background-color: #0b6ad0;
    }
</style>

<div>
    <h1>
        @{
            string category =
            Model.ProductCategoryId == 1 ? "Материнская плата" :
            Model.ProductCategoryId == 2 ? "Видеокарта" :
            Model.ProductCategoryId == 3 ? "Процессор" :
            Model.ProductCategoryId == 4 ? "Система охлаждения" :
            Model.ProductCategoryId == 5 ? "Оперативная память" :
            Model.ProductCategoryId == 6 ? "Блок питания" :
            Model.ProductCategoryId == 7 ? "Жесткий диск/SSD" :
            Model.ProductCategoryId == 8 ? "Корпус" :
            Model.ProductCategoryId == 9 ? "Периферия" :
            "Неизвестно";
            @category
        } - @Model.Names
    </h1>
    <div class="product-details-container">
        <div class="product-image">
            <img src="@Url.Content("~/image/" + Model.Img)" alt="@Model.Names">
        </div>
        <div class="product-info">
            <div class="product-description">
                <p>@Model.Descriptions</p>
            </div>
            <div>
                @{
                    var averageRating = await Component.InvokeAsync("AverageRating", new { productId = Model.IdProduct });
                }
                <div style="display: flex; align-items: center; gap: 10px; font-size: 16px;">
                    <span style="display: flex; align-items: center;">@averageRating</span>
                    <span style="margin-bottom: 5px;">| @Model.Reviews.Count() отзыв(ов)</span>
                </div>
            </div>
            <div class="product-price">
                <p>@Model.Price.ToString("N0") ₽</p>
                <button>Купить</button>
            </div>
            <div class="product-status">
                <span>
                    @{
                        string status = Model.ProductStatusId == 1 ? "В наличии" :
                        Model.ProductStatusId == 2 ? "Нет в наличии" :
                        "Неизвестно";
                        @status
                    }
                </span>
                <span>Пункты выдачи доступны</span>
            </div>
        </div>
    </div>
</div>

<div class="reviews-container">
    <div class="average-rating-card">
        <h2>Рейтинг товара</h2>
        @await Component.InvokeAsync("AverageRating", new { productId = Model.IdProduct })
        <h5>Есть что рассказать?</h5>
        <a>Оцените товар, ваш опыт будет полезен</a>
        <div class="add-review-button">
            <button onclick="openAddReviewModal()">Добавить отзыв</button>
        </div>
    </div>
    <div class="reviews-section">
        @await Html.PartialAsync("DisplayTemplates/Reviews", Model)
    </div>
</div>

<style>
    .modal {
        display: none; 
        position: fixed;
        z-index: 1000; 
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.5); 
    }

    .modal-content {
        background-color: #fff;
        margin: auto; 
        padding: 20px;
        border: 1px solid #888;
        border-radius: 16px;
        width: 50%; 
        max-width: 600px; 
        position: relative;
        top: 50%; 
        transform: translateY(-50%); 
    }

    .close {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
        cursor: pointer;
    }

    .close:hover,
    .close:focus {
        color: black;
        text-decoration: none;
    }
</style>

<div id="addReviewModal" class="modal">
    <div class="modal-content">
        @await Html.PartialAsync("_AddReview", new SORAPC.Models.Review { ProductId = Model.IdProduct })
    </div>
</div>

<script>
    function openAddReviewModal() {
        document.getElementById('addReviewModal').style.display = 'block';
    }

    window.onclick = function (event) {
        var modal = document.getElementById('addReviewModal');
        if (event.target == modal) {
            modal.style.display = "none";
        }
    }
</script>